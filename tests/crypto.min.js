"use strict";class Crypto{static deriveChildKey(t,e){return new Promise((function(r,n){var i=t.subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH),E=t.subarray(Crypto.CHAIN_CODE_LENGTH),c=new Promise((function(t,e){t([new Uint8Array(i),new Uint8Array(E)])})),a=[c];for(let t=0;t<e.length;++t)c=c.then((function(r){return new Promise((function(n,i){var E=r[Crypto.SECRET_KEY_INDEX],c=r[Crypto.CHAIN_CODE_INDEX];return Crypto.deriveSecretKeyAndChainCode(E,c,e[t]).then((function(t){E.fill(0),c.fill(0),n(t)})).catch((function(t){E.fill(0),c.fill(0),i(t)}))}))})).catch((function(t){return new Promise((function(e,r){r(t)}))})),a.push(c);return Promise.all(a).then((function(t){var e=t[t.length-1][Crypto.SECRET_KEY_INDEX],i=t[t.length-1][Crypto.CHAIN_CODE_INDEX],E=Common.mergeArrays([e,i]);e.fill(0),i.fill(0),!0===Secp256k1Zkp.isValidSecretKey(E.subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH))?r(E):(E.fill(0),n("Invalid extended private key."))})).catch((function(t){n(t)}))}))}static commit(t,e,r,n){return new Promise((function(i,E){return Crypto.deriveSecretKey(t,e,r,n).then((function(t){var r=Secp256k1Zkp.pedersenCommit(t,e.toFixed());r!==Secp256k1Zkp.OPERATION_FAILED?i(r):(t.fill(0),E("Performing Pedersen commit failed."))})).catch((function(t){E(t)}))}))}static commitAmount(t){var e=Secp256k1Zkp.pedersenCommit(Crypto.ZERO_BLINDING_FACTOR,t.toFixed());if(e!==Secp256k1Zkp.OPERATION_FAILED)return e;throw"Performing Pedersen commit failed."}static proof(t,e,r,n,i){return new Promise((function(E,c){return Crypto.commit(t,e,r,n).then((function(a){return Crypto.deriveSecretKey(t,e,r,n).then((function(t){return i.rewindNonce(a).then((function(o){return i.privateNonce(a).then((function(a){try{var _=i.proofMessage(r,n)}catch(e){return t.fill(0),o.fill(0),a.fill(0),void c("Getting proof message failed.")}var l=Secp256k1Zkp.createBulletproof(t,e.toFixed(),o,a,new Uint8Array([]),_);l!==Secp256k1Zkp.OPERATION_FAILED?(t.fill(0),o.fill(0),a.fill(0),E(l)):(t.fill(0),o.fill(0),a.fill(0),c("Getting bulletproof failed."))})).catch((function(e){t.fill(0),o.fill(0),c(e)}))})).catch((function(e){t.fill(0),c(e)}))})).catch((function(t){c(t)}))})).catch((function(t){c(t)}))}))}static deriveSecretKey(t,e,r,n){return new Promise((function(i,E){for(var c=new Uint32Array(r.getDepth()),a=0;a<r.getDepth();++a)c[a]=r.getPaths()[a];return Crypto.deriveChildKey(t,c).then((function(t){var r=new Uint8Array(t.subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH));if(t.fill(0),n===Crypto.SWITCH_TYPE_NONE)i(r);else if(n===Crypto.SWITCH_TYPE_REGULAR){var c=Secp256k1Zkp.blindSwitch(r,e.toFixed());if(c===Secp256k1Zkp.OPERATION_FAILED)return r.fill(0),void E("Performing blind switch failed.");r.fill(0),!0===Secp256k1Zkp.isValidSecretKey(c)?i(c):(c.fill(0),E("Blind switch isn't a valid secret key."))}else r.fill(0),E("Invalid switch type.")})).catch((function(t){E(t)}))}))}static signatureMessage(t){var e=Blake2b.compute(Crypto.SINGLE_SIGNER_MESSAGE_LENGTH,t,new Uint8Array([]));if(e!==Blake2b.OPERATION_FAILED)return e;throw"Creating signature message failed."}static rootPublicKey(t){return new Promise((function(e,r){var n=t.subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH),i=Secp256k1Zkp.publicKeyFromSecretKey(n);i!==Secp256k1Zkp.OPERATION_FAILED?e(i):r("Getting public key failed.")}))}static addressKey(t,e){return new Promise((function(r,n){return Crypto.deriveSecretKey(t,Crypto.ADDRESS_KEY_AMOUNT,new Identifier(Identifier.ROOT_SERIALIZED_IDENTIFIER),Crypto.SWITCH_TYPE_REGULAR).then((function(t){return crypto.subtle.importKey("raw",(new TextEncoder).encode(Crypto.ADDRESS_KEY_SEED),{name:Crypto.ADDRESS_KEY_ENCRYPTION_ALGORITHM,hash:{name:Crypto.ADDRESS_KEY_DIGEST_ALGORITHM}},!1,["sign"]).then((function(i){return crypto.subtle.sign(Crypto.ADDRESS_KEY_ENCRYPTION_ALGORITHM,i,t).then((function(i){t.fill(0);var E=(i=new Uint8Array(i)).subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH),c=i.subarray(Crypto.CHAIN_CODE_LENGTH);if(!0===Secp256k1Zkp.isValidSecretKey(E))return Crypto.deriveSecretKeyAndChainCode(E,c,e).then((function(t){i.fill(0),t[Crypto.CHAIN_CODE_INDEX].fill(0),r(t[Crypto.SECRET_KEY_INDEX])})).catch((function(t){i.fill(0),n(t)}));i.fill(0),n("Secret key is not a valid secret key.")})).catch((function(e){t.fill(0),n(e)}))})).catch((function(e){t.fill(0),n(e)}))})).catch((function(t){n(t)}))}))}static aesDecrypt(t,e){return new Promise((function(r,n){return crypto.subtle.importKey("raw",e,{name:Crypto.AES_ALGORITHM},!1,["decrypt"]).then((function(e){return crypto.subtle.decrypt({name:Crypto.AES_ALGORITHM,iv:new Uint8Array(Crypto.AES_INITIALIZATION_VECTOR_SIZE).fill(0)},e,t).then((function(t){r(new Uint8Array(t))})).catch((function(t){n(t)}))})).catch((function(t){n(t)}))}))}static get SWITCH_TYPE_NONE(){return 0}static get SWITCH_TYPE_REGULAR(){return Crypto.SWITCH_TYPE_NONE+1}static get SECP256K1_SECRET_KEY_LENGTH(){return 32}static get SECP256K1_PUBLIC_KEY_LENGTH(){return 33}static get BLINDING_FACTOR_LENGTH(){return 32}static get COMMIT_LENGTH(){return 33}static get SINGLE_SIGNER_SIGNATURE_LENGTH(){return 64}static get SINGLE_SIGNER_MESSAGE_LENGTH(){return 32}static get MAXIMUM_PROOF_LENGTH(){return 5134}static get ZERO_BLINDING_FACTOR(){return new Uint8Array(Crypto.BLINDING_FACTOR_LENGTH).fill(0)}static get ED25519_PUBLIC_KEY_LENGTH(){return 32}static get ED25519_SIGNATURE_LENGTH(){return 64}static get MAXIMUM_MESSAGE_HASH_SIGNATURE_LENGTH(){return 72}static get NONCE_LENGTH(){return 32}static get TAU_X_LENGTH(){return 32}static get AES_KEY_LENGTH(){return 32}static deriveSecretKeyAndChainCode(t,e,r){return new Promise((function(n,i){return crypto.subtle.importKey("raw",e,{name:Crypto.CHAIN_CODE_ENCRYPTION_ALGORITHM,hash:{name:Crypto.CHAIN_CODE_DIGEST_ALGORITHM}},!1,["sign"]).then((function(e){if(!0===Identifier.isPathHardened(r))var E=Common.mergeArrays([new Uint8Array([0]),t]);else if((E=Secp256k1Zkp.publicKeyFromSecretKey(t))===Secp256k1Zkp.OPERATION_FAILED)return void i("Getting public key from secret key failed.");var c=new ArrayBuffer(Uint32Array.BYTES_PER_ELEMENT);new DataView(c).setUint32(0,r,!1);var a=Common.mergeArrays([E,new Uint8Array(c)]);return E.fill(0),crypto.subtle.sign(Crypto.CHAIN_CODE_ENCRYPTION_ALGORITHM,e,a).then((function(e){a.fill(0);var r=(e=new Uint8Array(e)).subarray(0,Crypto.SECP256K1_SECRET_KEY_LENGTH);if(!0===Secp256k1Zkp.isValidSecretKey(r)){var E=Secp256k1Zkp.secretKeyTweakAdd(r,t);if(E===Secp256k1Zkp.OPERATION_FAILED)return e.fill(0),void i("Performing secret key tweak add failed.");if(!0===Secp256k1Zkp.isValidSecretKey(E)){var c=new Uint8Array(e.subarray(Crypto.CHAIN_CODE_LENGTH));e.fill(0),n([E,c])}else e.fill(0),E.fill(0),i("Updated secret key is not a valid secret key.")}else e.fill(0),i("New secret key is not a valid secret key.")})).catch((function(t){a.fill(0),i("Creating new extended private key failed.")}))})).catch((function(t){i("Creating crypto key failed.")}))}))}static get CHAIN_CODE_LENGTH(){return 32}static get SECRET_KEY_INDEX(){return 0}static get CHAIN_CODE_INDEX(){return Crypto.SECRET_KEY_INDEX+1}static get CHAIN_CODE_ENCRYPTION_ALGORITHM(){return"HMAC"}static get CHAIN_CODE_DIGEST_ALGORITHM(){return"SHA-512"}static get ADDRESS_KEY_AMOUNT(){return new BigNumber(713)}static get ADDRESS_KEY_SEED(){return"Grinbox_seed"}static get ADDRESS_KEY_ENCRYPTION_ALGORITHM(){return"HMAC"}static get ADDRESS_KEY_DIGEST_ALGORITHM(){return"SHA-512"}static get AES_ALGORITHM(){return"AES-CBC"}static get AES_INITIALIZATION_VECTOR_SIZE(){return 16}}