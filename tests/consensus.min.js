"use strict";class Consensus{static getWalletType(){var s=Common.getUrlParameters();if(Consensus.OVERRIDE_WALLET_TYPE_URL_PARAMETER_NAME in s==!0)switch(s[Consensus.OVERRIDE_WALLET_TYPE_URL_PARAMETER_NAME].toLowerCase()){case Consensus.WALLET_MWC_TEXT_VALUE.toLowerCase():return Consensus.MWC_WALLET_TYPE;case Consensus.WALLET_GRIN_TEXT_VALUE.toLowerCase():return Consensus.GRIN_WALLET_TYPE}return Consensus.DEFAULT_WALLET_TYPE}static getNetworkType(){var s=Common.getUrlParameters();if(Consensus.OVERRIDE_NETWORK_TYPE_URL_PARAMETER_NAME in s==!0)switch(s[Consensus.OVERRIDE_NETWORK_TYPE_URL_PARAMETER_NAME].toLowerCase()){case Consensus.NETWORK_MAINNET_TEXT_VALUE.toLowerCase():return Consensus.MAINNET_NETWORK_TYPE;case Consensus.NETWORK_TESTNET_TEXT_VALUE.toLowerCase():switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return Consensus.TESTNET_NETWORK_TYPE}break;case Consensus.NETWORK_FLOONET_TEXT_VALUE.toLowerCase():switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return Consensus.TESTNET_NETWORK_TYPE}}return Consensus.DEFAULT_NETWORK_TYPE}static walletTypeToText(s){switch(s){case Consensus.MWC_WALLET_TYPE:return Consensus.WALLET_MWC_TEXT_VALUE;case Consensus.GRIN_WALLET_TYPE:return Consensus.WALLET_GRIN_TEXT_VALUE}}static networkTypeToText(s){switch(s){case Consensus.MAINNET_NETWORK_TYPE:return Consensus.NETWORK_MAINNET_TEXT_VALUE;case Consensus.TESTNET_NETWORK_TYPE:switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return Consensus.NETWORK_FLOONET_TEXT_VALUE;case Consensus.GRIN_WALLET_TYPE:return Consensus.NETWORK_TESTNET_TEXT_VALUE}}}static getReward(s,e,n){var t=Consensus.getBlockReward(s,n);return t=t.plus(e)}static isValidHeaderVersion(s,e,n){return!0===n.isEqualTo(Consensus.getHeaderVersion(s,e))}static isNoRecentDuplicateKernelsEnabled(s){return!0!==s}static get BLOCK_TIME_SECONDS(){return 60}static get BLOCK_HEIGHT_MINUTE(){return Math.floor(Common.SECONDS_IN_A_MINUTE/Consensus.BLOCK_TIME_SECONDS)}static get BLOCK_HEIGHT_HOUR(){return Common.MINUTES_IN_AN_HOUR*Consensus.BLOCK_HEIGHT_MINUTE}static get BLOCK_HEIGHT_DAY(){return Common.HOURS_IN_A_DAY*Consensus.BLOCK_HEIGHT_HOUR}static get BLOCK_HEIGHT_WEEK(){return Common.DAYS_IN_A_WEEK*Consensus.BLOCK_HEIGHT_DAY}static get BLOCK_HEIGHT_YEAR(){return Common.WEEKS_IN_A_YEAR*Consensus.BLOCK_HEIGHT_WEEK}static get COINBASE_MATURITY(){return Consensus.BLOCK_HEIGHT_DAY}static get FIRST_BLOCK_HEIGHT(){return 0}static get VALUE_NUMBER_BASE(){return 1e9}static get CURRENCY_NAME(){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return"MWC";case Consensus.GRIN_WALLET_TYPE:return"GRIN"}}static get SLATEPACK_ADDRESS_HUMAN_READABLE_PART(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:switch(Consensus.getNetworkType()){case Consensus.MAINNET_NETWORK_TYPE:return"grin";case Consensus.TESTNET_NETWORK_TYPE:return"tgrin"}}}static get MWC_WALLET_TYPE(){return 0}static get GRIN_WALLET_TYPE(){return Consensus.MWC_WALLET_TYPE+1}static get MAINNET_NETWORK_TYPE(){return 0}static get TESTNET_NETWORK_TYPE(){return Consensus.MAINNET_NETWORK_TYPE+1}static get LEGACY_HEADER_VERSION(){return new BigNumber(1)}static get BLOCK_INPUT_WEIGHT(){return 1}static get BLOCK_OUTPUT_WEIGHT(){return 21}static get BLOCK_KERNEL_WEIGHT(){return 3}static get MAXIMUM_BLOCK_WEIGHT(){return 4e4}static getBlockReward(s,e){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return!0===e.isEqualTo(Consensus.FIRST_BLOCK_HEIGHT)?new BigNumber("10000000041800000"):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,2))?new BigNumber(2380952380):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,3))?new BigNumber(6e8):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,4))?new BigNumber(45e7):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,5))?new BigNumber(3e8):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,6))?new BigNumber(25e7):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,7))?new BigNumber(2e8):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,8))?new BigNumber(15e7):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,9))?new BigNumber(1e8):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,10))?new BigNumber(5e7):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,11))?new BigNumber(25e6):!0===e.isLessThan(Consensus.getEpochBlockOffset(s,11).plus(Consensus.getEpochDuration(s,11)))?new BigNumber(1e7):!0===e.isEqualTo(Consensus.getEpochBlockOffset(s,11).plus(Consensus.getEpochDuration(s,11)))?new BigNumber(2211980):new BigNumber(0);case Consensus.GRIN_WALLET_TYPE:return new BigNumber("60000000000")}}static getEpochDuration(s,e){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:switch(e){case 1:return 0;case 2:return!0===s?120*Consensus.BLOCK_HEIGHT_DAY:Consensus.BLOCK_HEIGHT_DAY;case 3:return!0===s?60*Consensus.BLOCK_HEIGHT_DAY:Consensus.BLOCK_HEIGHT_DAY;case 4:return 120*Consensus.BLOCK_HEIGHT_DAY;case 5:case 6:return 180*Consensus.BLOCK_HEIGHT_DAY;case 7:case 8:return Consensus.BLOCK_HEIGHT_YEAR;case 9:return 6*Consensus.BLOCK_HEIGHT_YEAR;case 10:return 10*Consensus.BLOCK_HEIGHT_YEAR;case 11:return 876349148}}}static getEpochBlockOffset(s,e){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:var n=Consensus.getC31HardForkHeight(s);e>=2&&(n=n.plus(!0===s?Consensus.BLOCK_HEIGHT_WEEK:Consensus.BLOCK_HEIGHT_DAY));for(var t=3;t<=e;++t)n=n.plus(Consensus.getEpochDuration(s,t-1));return n}}static getC31HardForkHeight(s){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return!0===s?new BigNumber(202500):new BigNumber(27e4)}}static getHeaderVersion(s,e){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return!0===e.isLessThan(Consensus.getC31HardForkHeight(s))?Consensus.LEGACY_HEADER_VERSION:Consensus.C31_HEADER_VERSION;case Consensus.GRIN_WALLET_TYPE:if(!0===s){var n=e.dividedToIntegerBy(Consensus.HARD_FORK_INTERVAL).plus(1);return!0===n.isGreaterThan(Consensus.MAXIMUM_HEADER_VERSION)&&(n=new BigNumber(Consensus.MAXIMUM_HEADER_VERSION)),n}return!0===e.isLessThan(Consensus.FIRST_HARD_FORK_HEIGHT)?Consensus.LEGACY_HEADER_VERSION:!0===e.isLessThan(Consensus.SECOND_HARD_FORK_HEIGHT)?Consensus.LEGACY_HEADER_VERSION.plus(1):!0===e.isLessThan(Consensus.THIRD_HARD_FORK_HEIGHT)?Consensus.LEGACY_HEADER_VERSION.plus(2):!0===e.isLessThan(Consensus.FOURTH_HARD_FORK_HEIGHT)?Consensus.LEGACY_HEADER_VERSION.plus(3):Consensus.LEGACY_HEADER_VERSION.plus(4)}}static get HARD_FORK_INTERVAL(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return Math.floor(Consensus.BLOCK_HEIGHT_YEAR/2)}}static get FIRST_HARD_FORK_HEIGHT(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return 185040}}static get SECOND_HARD_FORK_HEIGHT(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return 298080}}static get THIRD_HARD_FORK_HEIGHT(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return 552960}}static get FOURTH_HARD_FORK_HEIGHT(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return 642240}}static get C31_HEADER_VERSION(){switch(Consensus.getWalletType()){case Consensus.MWC_WALLET_TYPE:return Consensus.LEGACY_HEADER_VERSION.plus(1)}}static get MAXIMUM_HEADER_VERSION(){switch(Consensus.getWalletType()){case Consensus.GRIN_WALLET_TYPE:return 5}}static get DEFAULT_WALLET_TYPE(){return Consensus.MWC_WALLET_TYPE}static get DEFAULT_NETWORK_TYPE(){return Consensus.MAINNET_NETWORK_TYPE}static get WALLET_MWC_TEXT_VALUE(){return"undefined"!=typeof Language?Language.getDefaultTranslation("MimbleWimble Coin"):"MimbleWimble Coin"}static get WALLET_GRIN_TEXT_VALUE(){return"undefined"!=typeof Language?Language.getDefaultTranslation("Grin"):"Grin"}static get NETWORK_MAINNET_TEXT_VALUE(){return"undefined"!=typeof Language?Language.getDefaultTranslation("Mainnet"):"Mainnet"}static get NETWORK_FLOONET_TEXT_VALUE(){return"undefined"!=typeof Language?Language.getDefaultTranslation("Floonet"):"Floonet"}static get NETWORK_TESTNET_TEXT_VALUE(){return"undefined"!=typeof Language?Language.getDefaultTranslation("Testnet"):"Testnet"}static get OVERRIDE_WALLET_TYPE_URL_PARAMETER_NAME(){return"override_wallet_type"}static get OVERRIDE_NETWORK_TYPE_URL_PARAMETER_NAME(){return"override_network_type"}}