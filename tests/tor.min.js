"use strict";class Tor{static initialize(){return Tor.browserSupportsTor=!0===Tor.isOnionService()||Tor.SUPPORT_UNKNOWN,new Promise((function(r,o){return Tor.checkIfBrowserSupportsTor().then((function(){Tor.browserSupportsTor===Tor.SUPPORT_UNKNOWN&&$(window).on("online",(function(){Tor.checkIfBrowserSupportsTor()})),r()}))}))}static isSupported(){return!0===Tor.browserSupportsTor}static isTorUrl(r){try{var o=new URL(r)}catch(r){return!1}return!0===Tor.URL_PATTERN.test(o.protocol+"//"+o.hostname)}static getTorAddressFromUrl(r){try{var o=new URL((!1===Common.urlContainsProtocol(r)?Common.HTTP_PROTOCOL+"//":"")+r+(!1===Common.urlContainsProtocol(r)&&!1===Common.urlContainsTopLevelDomain(r)?Tor.URL_TOP_LEVEL_DOMAIN:""))}catch(r){throw"Invalid URL."}if(!1===Tor.URL_PATTERN.test(o.protocol+"//"+o.hostname))throw"Invalid URL.";var t=Common.removeTopLevelDomain(Common.removeSubdomain(o.hostname));try{Tor.torAddressToPublicKey(t)}catch(r){throw"Invalid URL."}return t}static isOnionService(){return!0===Tor.isTorUrl(location.protocol+"//"+location.hostname)}static publicKeyToTorAddress(r){var o=new Uint8Array(sha3_256.arrayBuffer(Common.mergeArrays([(new TextEncoder).encode(Tor.ADDRESS_CHECKSUM_SEED),r,new Uint8Array([Tor.ADDRESS_VERSION])])));return base32.encode(Common.mergeArrays([r,o.subarray(0,Tor.ADDRESS_CHECKSUM_LENGTH),new Uint8Array([Tor.ADDRESS_VERSION])])).toLowerCase()}static torAddressToPublicKey(r){if(!1===Common.isLowercaseString(r))throw"Invalid Tor address.";try{var o=new Uint8Array(base32.decode.asBytes(r.toUpperCase()))}catch(r){throw"Invalid Tor address."}if(o.length!==Crypto.ED25519_PUBLIC_KEY_LENGTH+Tor.ADDRESS_CHECKSUM_LENGTH+[Tor.ADDRESS_VERSION].length)throw"Invalid Tor address.";var t=new Uint8Array(sha3_256.arrayBuffer(Common.mergeArrays([(new TextEncoder).encode(Tor.ADDRESS_CHECKSUM_SEED),o.subarray(0,Crypto.ED25519_PUBLIC_KEY_LENGTH),new Uint8Array([Tor.ADDRESS_VERSION])])));if(!1===Common.arraysAreEqual(t.subarray(0,Tor.ADDRESS_CHECKSUM_LENGTH),o.subarray(Crypto.ED25519_PUBLIC_KEY_LENGTH,Crypto.ED25519_PUBLIC_KEY_LENGTH+Tor.ADDRESS_CHECKSUM_LENGTH)))throw"Invalid Tor address.";if(o[Crypto.ED25519_PUBLIC_KEY_LENGTH+Tor.ADDRESS_CHECKSUM_LENGTH]!==Tor.ADDRESS_VERSION)throw"Invalid Tor address.";return o.subarray(0,Crypto.ED25519_PUBLIC_KEY_LENGTH)}static get ADDRESS_LENGTH(){return 56}static get URL_TOP_LEVEL_DOMAIN(){return".onion"}static checkIfBrowserSupportsTor(){return new Promise((function(r,o){if(!0===navigator.onLine&&Tor.browserSupportsTor===Tor.SUPPORT_UNKNOWN)return $.get(TOR_SERVER_ADDRESS+Tor.CONNECTION_TEST_URL).then((function(){Tor.browserSupportsTor=!0,r()})).catch((function(o){Tor.browserSupportsTor=!1,r()}));r()}))}static get SUPPORT_UNKNOWN(){return null}static get CONNECTION_TEST_URL(){return getResource("./connection_test.html").substring(".".length)}static get URL_PATTERN(){return/^[^:]+:\/\/.+\.onion$/iu}static get ADDRESS_CHECKSUM_SEED(){return".onion checksum"}static get ADDRESS_VERSION(){return 3}static get ADDRESS_CHECKSUM_LENGTH(){return 2}}