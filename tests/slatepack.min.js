"use strict";class Slatepack{static encryptMessage(e,a,t){return new Promise((function(r,c){var E=X25519.secretKeyFromEd25519SecretKey(e);E===X25519.OPERATION_FAILED&&c("Invalid secret key.");var i=X25519.publicKeyFromEd25519PublicKey(a);i===X25519.OPERATION_FAILED&&c("Invalid public key.");var s=X25519.sharedKeyFromSecretKeyAndPublicKey(E,i);if(s===X25519.OPERATION_FAILED)c("Creating shared key failed.");else if(0!==t.length){var n=new Uint8Array(Slatepack.NONCE_LENGTH);crypto.getRandomValues(n);try{var A=chacha.createCipher(s,n);A.setAAD(Slatepack.AAD_VALUE);var l=A.update(t);A.end();var y=A.getAuthTag();l=Common.mergeArrays([l,y])}catch(e){return void c("Encrypting message failed.")}r([n,l])}else c("Invalid message.")}))}static decryptMessage(e,a,t,r){return new Promise((function(c,E){var i=X25519.secretKeyFromEd25519SecretKey(e);i===X25519.OPERATION_FAILED&&E("Invalid secret key.");var s=X25519.publicKeyFromEd25519PublicKey(a);s===X25519.OPERATION_FAILED&&E("Invalid public key.");var n=X25519.sharedKeyFromSecretKeyAndPublicKey(i,s);if(n===X25519.OPERATION_FAILED)E("Creating shared key failed.");else if(t.length>Slatepack.TAG_LENGTH){try{var A=chacha.createDecipher(n,r);A.setAAD(Slatepack.AAD_VALUE),A.setAuthTag(t.subarray(t.length-Slatepack.TAG_LENGTH));var l=A.update(t.subarray(0,t.length-Slatepack.TAG_LENGTH));A.end()}catch(e){return void E("Decrypting message failed.")}c(l)}else E("Invalid encrypted message.")}))}static get ENCRYPTED_MESSAGE_NONCE_INDEX(){return 0}static get ENCRYPTED_MESSAGE_DATA_INDEX(){return Slatepack.ENCRYPTED_MESSAGE_NONCE_INDEX+1}static get NONCE_LENGTH(){return 12}static get TAG_LENGTH(){return 16}static get AAD_VALUE(){return new Uint8Array([])}}