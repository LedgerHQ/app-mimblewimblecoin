"use strict";class Slatepack{static publicKeyToSlatepackAddress(e){return bech32.encode(Consensus.SLATEPACK_ADDRESS_HUMAN_READABLE_PART,bech32.toWords(e))}static slatepackAddressToPublicKey(e){try{var r=bech32.decode(e)}catch(e){throw"Invalid Slatepack address."}var a=bech32.fromWords(r.words);if(a.length!==Crypto.ED25519_PUBLIC_KEY_LENGTH)throw"Invalid Slatepack address.";if(r.prefix!==Consensus.SLATEPACK_ADDRESS_HUMAN_READABLE_PART)throw"Invalid Slatepack address.";return new Uint8Array(a)}static encryptMessage(e,r,a){return new Promise((function(t,l){var i=X25519.secretKeyFromEd25519SecretKey(e);i===X25519.OPERATION_FAILED&&l("Invalid secret key.");var s=X25519.publicKeyFromEd25519PublicKey(r);s===X25519.OPERATION_FAILED&&(i.fill(0),l("Invalid public key."));var c=X25519.sharedSecretKeyFromSecretKeyAndPublicKey(i,s);if(c===X25519.OPERATION_FAILED)i.fill(0),l("Creating shared secret key failed.");else if(i.fill(0),!1===Common.arraysAreEqual(c,new Uint8Array(c.length).fill(0)))if(0!==a.length){var n=new Uint8Array(Slatepack.NONCE_LENGTH);crypto.getRandomValues(n);try{var A=chacha.createCipher(c,n);A.setAAD(Slatepack.AAD_VALUE);var E=A.update(a);A.end();var d=A.getAuthTag();E=Common.mergeArrays([E,d])}catch(e){return c.fill(0),void l("Encrypting message failed.")}c.fill(0),t([n,E])}else c.fill(0),l("Invalid message.");else c.fill(0),l("Invalid shared secret key")}))}static decryptMessage(e,r,a,t){return new Promise((function(l,i){var s=X25519.secretKeyFromEd25519SecretKey(e);s===X25519.OPERATION_FAILED&&i("Invalid secret key.");var c=X25519.publicKeyFromEd25519PublicKey(r);c===X25519.OPERATION_FAILED&&(s.fill(0),i("Invalid public key."));var n=X25519.sharedSecretKeyFromSecretKeyAndPublicKey(s,c);if(n===X25519.OPERATION_FAILED)s.fill(0),i("Creating shared secret key failed.");else if(s.fill(0),!1===Common.arraysAreEqual(n,new Uint8Array(n.length).fill(0)))if(a.length>Slatepack.TAG_LENGTH){try{var A=chacha.createDecipher(n,t);A.setAAD(Slatepack.AAD_VALUE),A.setAuthTag(a.subarray(a.length-Slatepack.TAG_LENGTH));var E=A.update(a.subarray(0,a.length-Slatepack.TAG_LENGTH));A.end()}catch(e){return n.fill(0),void i("Decrypting message failed.")}n.fill(0),l(E)}else n.fill(0),i("Invalid encrypted message.");else n.fill(0),i("Invalid shared secret key")}))}static get ENCRYPTED_MESSAGE_NONCE_INDEX(){return 0}static get ENCRYPTED_MESSAGE_DATA_INDEX(){return Slatepack.ENCRYPTED_MESSAGE_NONCE_INDEX+1}static get NONCE_LENGTH(){return 12}static get TAG_LENGTH(){return 16}static get AAD_VALUE(){return new Uint8Array([])}}