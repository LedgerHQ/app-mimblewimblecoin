"use strict";class Slatepack{static publicKeyToSlatepackAddress(e){return bech32.encode(Consensus.SLATEPACK_ADDRESS_HUMAN_READABLE_PART,bech32.toWords(e))}static slatepackAddressToPublicKey(e){try{var r=bech32.decode(e)}catch(e){throw"Invalid Slatepack address."}var a=bech32.fromWords(r.words);if(a.length!==Crypto.ED25519_PUBLIC_KEY_LENGTH)throw"Invalid Slatepack address.";if(r.prefix!==Consensus.SLATEPACK_ADDRESS_HUMAN_READABLE_PART)throw"Invalid Slatepack address.";return new Uint8Array(a)}static encryptMessage(e,r,a){return new Promise((function(t,l){var s=X25519.secretKeyFromEd25519SecretKey(e);s===X25519.OPERATION_FAILED&&l("Invalid secret key.");var c=X25519.publicKeyFromEd25519PublicKey(r);c===X25519.OPERATION_FAILED&&(s.fill(0),l("Invalid public key."));var i=X25519.sharedSecretKeyFromSecretKeyAndPublicKey(s,c);if(i===X25519.OPERATION_FAILED)s.fill(0),l("Creating shared secret key failed.");else if(s.fill(0),!1===Common.arraysAreEqual(i,new Uint8Array(i.length).fill(0)))if(0!==a.length){var n=new Uint8Array(Slatepack.NONCE_LENGTH);crypto.getRandomValues(n);try{var A=chacha.createCipher(i,n);A.setAAD(Slatepack.AAD_VALUE);var d=A.update(a);A.end();var E=A.getAuthTag();d=Common.mergeArrays([d,E])}catch(e){return i.fill(0),void l("Encrypting message failed.")}i.fill(0),t([n,d])}else i.fill(0),l("Invalid message.");else i.fill(0),l("Invalid shared secret key")}))}static decryptMessage(e,r,a,t){return new Promise((function(l,s){var c=X25519.secretKeyFromEd25519SecretKey(e);c===X25519.OPERATION_FAILED&&s("Invalid secret key.");var i=X25519.publicKeyFromEd25519PublicKey(r);i===X25519.OPERATION_FAILED&&(c.fill(0),s("Invalid public key."));X25519.sharedSecretKeyFromSecretKeyAndPublicKey(c,i);if(sharedSecretKey===X25519.OPERATION_FAILED)c.fill(0),s("Creating shared secret key failed.");else if(c.fill(0),!1===Common.arraysAreEqual(sharedSecretKey,new Uint8Array(sharedSecretKey.length).fill(0)))if(a.length>Slatepack.TAG_LENGTH){try{var n=chacha.createDecipher(sharedSecretKey,t);n.setAAD(Slatepack.AAD_VALUE),n.setAuthTag(a.subarray(a.length-Slatepack.TAG_LENGTH));var A=n.update(a.subarray(0,a.length-Slatepack.TAG_LENGTH));n.end()}catch(e){return sharedSecretKey.fill(0),void s("Decrypting message failed.")}sharedSecretKey.fill(0),l(A)}else sharedSecretKey.fill(0),s("Invalid encrypted message.");else sharedSecretKey.fill(0),s("Invalid shared secret key")}))}static get ENCRYPTED_MESSAGE_NONCE_INDEX(){return 0}static get ENCRYPTED_MESSAGE_DATA_INDEX(){return Slatepack.ENCRYPTED_MESSAGE_NONCE_INDEX+1}static get NONCE_LENGTH(){return 12}static get TAG_LENGTH(){return 16}static get AAD_VALUE(){return new Uint8Array([])}}